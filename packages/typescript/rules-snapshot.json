{
  "@typescript-eslint/array-type": "error",
  "@typescript-eslint/await-thenable": "error",
  "@typescript-eslint/ban-ts-comment": "error",
  "@typescript-eslint/consistent-type-assertions": "error",
  "@typescript-eslint/consistent-type-definitions": ["error", "type"],
  "@typescript-eslint/consistent-type-exports": "error",
  "@typescript-eslint/consistent-type-imports": "error",
  "@typescript-eslint/default-param-last": "error",
  "@typescript-eslint/explicit-function-return-type": "error",
  "@typescript-eslint/naming-convention": [
    "error",
    {
      "selector": "default",
      "format": ["camelCase"],
      "leadingUnderscore": "allow",
      "trailingUnderscore": "forbid"
    },
    { "selector": "enumMember", "format": ["PascalCase"] },
    {
      "selector": "import",
      "format": ["camelCase", "PascalCase", "snake_case", "UPPER_CASE"]
    },
    {
      "selector": "interface",
      "format": ["PascalCase"],
      "custom": { "regex": "^I[A-Z]", "match": false }
    },
    {
      "selector": "objectLiteralMethod",
      "format": ["camelCase", "PascalCase", "UPPER_CASE"]
    },
    {
      "selector": "objectLiteralProperty",
      "format": ["camelCase", "PascalCase", "UPPER_CASE"]
    },
    { "selector": "typeLike", "format": ["PascalCase"] },
    {
      "selector": "typeParameter",
      "format": ["PascalCase"],
      "custom": { "regex": "^.{3,}", "match": true }
    },
    {
      "selector": "variable",
      "format": ["camelCase", "UPPER_CASE", "PascalCase"],
      "leadingUnderscore": "allow"
    },
    {
      "selector": "parameter",
      "format": ["camelCase", "PascalCase"],
      "leadingUnderscore": "allow"
    },
    {
      "selector": [
        "classProperty",
        "objectLiteralProperty",
        "typeProperty",
        "classMethod",
        "objectLiteralMethod",
        "typeMethod",
        "accessor",
        "enumMember"
      ],
      "format": null,
      "modifiers": ["requiresQuotes"]
    }
  ],
  "@typescript-eslint/no-array-constructor": "error",
  "@typescript-eslint/no-array-delete": "error",
  "@typescript-eslint/no-base-to-string": "error",
  "@typescript-eslint/no-dupe-class-members": "error",
  "@typescript-eslint/no-duplicate-enum-values": "error",
  "@typescript-eslint/no-duplicate-type-constituents": "off",
  "@typescript-eslint/no-empty-object-type": "error",
  "@typescript-eslint/no-explicit-any": "off",
  "@typescript-eslint/no-extra-non-null-assertion": "error",
  "@typescript-eslint/no-floating-promises": "error",
  "@typescript-eslint/no-for-in-array": "error",
  "@typescript-eslint/no-implied-eval": "error",
  "@typescript-eslint/no-meaningless-void-operator": "error",
  "@typescript-eslint/no-misused-new": "error",
  "@typescript-eslint/no-misused-promises": "error",
  "@typescript-eslint/no-namespace": [
    "error",
    { "allowDefinitionFiles": true }
  ],
  "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
  "@typescript-eslint/no-non-null-assertion": "error",
  "@typescript-eslint/no-redundant-type-constituents": "off",
  "@typescript-eslint/no-require-imports": "error",
  "@typescript-eslint/no-shadow": ["error", { "builtinGlobals": true }],
  "@typescript-eslint/no-this-alias": "error",
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
  "@typescript-eslint/no-unnecessary-qualifier": "error",
  "@typescript-eslint/no-unnecessary-type-arguments": "error",
  "@typescript-eslint/no-unnecessary-type-assertion": "error",
  "@typescript-eslint/no-unnecessary-type-constraint": "error",
  "@typescript-eslint/no-unsafe-argument": "off",
  "@typescript-eslint/no-unsafe-assignment": "off",
  "@typescript-eslint/no-unsafe-call": "off",
  "@typescript-eslint/no-unsafe-declaration-merging": "error",
  "@typescript-eslint/no-unsafe-enum-comparison": "off",
  "@typescript-eslint/no-unsafe-function-type": "error",
  "@typescript-eslint/no-unsafe-member-access": "off",
  "@typescript-eslint/no-unsafe-return": "off",
  "@typescript-eslint/no-unsafe-unary-minus": "error",
  "@typescript-eslint/no-unused-expressions": [
    "error",
    { "allowShortCircuit": true, "allowTernary": true }
  ],
  "@typescript-eslint/no-unused-vars": [
    "error",
    {
      "vars": "all",
      "args": "all",
      "argsIgnorePattern": "[_]+",
      "ignoreRestSiblings": true
    }
  ],
  "@typescript-eslint/no-use-before-define": ["error", { "functions": false }],
  "@typescript-eslint/no-useless-constructor": "error",
  "@typescript-eslint/no-wrapper-object-types": "error",
  "@typescript-eslint/only-throw-error": "error",
  "@typescript-eslint/parameter-properties": "error",
  "@typescript-eslint/prefer-as-const": "error",
  "@typescript-eslint/prefer-enum-initializers": "error",
  "@typescript-eslint/prefer-for-of": "error",
  "@typescript-eslint/prefer-function-type": "error",
  "@typescript-eslint/prefer-includes": "error",
  "@typescript-eslint/prefer-namespace-keyword": "error",
  "@typescript-eslint/prefer-nullish-coalescing": "error",
  "@typescript-eslint/prefer-optional-chain": "error",
  "@typescript-eslint/prefer-promise-reject-errors": [
    "error",
    { "allowThrowingUnknown": true }
  ],
  "@typescript-eslint/prefer-readonly": "error",
  "@typescript-eslint/prefer-reduce-type-parameter": "error",
  "@typescript-eslint/prefer-string-starts-ends-with": "error",
  "@typescript-eslint/promise-function-async": "error",
  "@typescript-eslint/require-await": "off",
  "@typescript-eslint/restrict-plus-operands": "error",
  "@typescript-eslint/restrict-template-expressions": [
    "error",
    { "allowBoolean": true, "allowNumber": true }
  ],
  "@typescript-eslint/switch-exhaustiveness-check": [
    "error",
    { "considerDefaultExhaustiveForUnions": true }
  ],
  "@typescript-eslint/triple-slash-reference": "error",
  "@typescript-eslint/unbound-method": "error",
  "@typescript-eslint/unified-signatures": "error",
  "constructor-super": "off",
  "default-param-last": "off",
  "getter-return": "off",
  "import-x/named": "off",
  "import-x/no-unresolved": "off",
  "jsdoc/check-access": "error",
  "jsdoc/check-alignment": "error",
  "jsdoc/check-examples": "off",
  "jsdoc/check-indentation": "error",
  "jsdoc/check-line-alignment": "off",
  "jsdoc/check-param-names": "error",
  "jsdoc/check-property-names": "error",
  "jsdoc/check-syntax": "error",
  "jsdoc/check-tag-names": ["error", { "typed": true }],
  "jsdoc/check-template-names": "off",
  "jsdoc/check-types": "error",
  "jsdoc/check-values": "error",
  "jsdoc/convert-to-jsdoc-comments": "off",
  "jsdoc/empty-tags": "error",
  "jsdoc/implements-on-classes": "error",
  "jsdoc/imports-as-dependencies": "off",
  "jsdoc/informative-docs": "off",
  "jsdoc/lines-before-block": "off",
  "jsdoc/match-description": "off",
  "jsdoc/match-name": "off",
  "jsdoc/multiline-blocks": "error",
  "jsdoc/no-bad-blocks": "off",
  "jsdoc/no-blank-block-descriptions": "off",
  "jsdoc/no-blank-blocks": "off",
  "jsdoc/no-defaults": "error",
  "jsdoc/no-missing-syntax": "off",
  "jsdoc/no-multi-asterisks": "error",
  "jsdoc/no-restricted-syntax": "off",
  "jsdoc/no-types": "error",
  "jsdoc/no-undefined-types": "off",
  "jsdoc/require-asterisk-prefix": "off",
  "jsdoc/require-description": "off",
  "jsdoc/require-description-complete-sentence": "off",
  "jsdoc/require-example": "off",
  "jsdoc/require-file-overview": "off",
  "jsdoc/require-hyphen-before-param-description": "off",
  "jsdoc/require-jsdoc": "error",
  "jsdoc/require-param": "error",
  "jsdoc/require-param-description": "error",
  "jsdoc/require-param-name": "error",
  "jsdoc/require-param-type": "off",
  "jsdoc/require-property": "error",
  "jsdoc/require-property-description": "error",
  "jsdoc/require-property-name": "error",
  "jsdoc/require-property-type": "off",
  "jsdoc/require-returns": "error",
  "jsdoc/require-returns-check": "error",
  "jsdoc/require-returns-description": "error",
  "jsdoc/require-returns-type": "off",
  "jsdoc/require-template": "off",
  "jsdoc/require-throws": "off",
  "jsdoc/require-yields": "error",
  "jsdoc/require-yields-check": "error",
  "jsdoc/sort-tags": "off",
  "jsdoc/tag-lines": "error",
  "jsdoc/text-escaping": "off",
  "jsdoc/valid-types": "off",
  "no-array-constructor": "off",
  "no-class-assign": "off",
  "no-const-assign": "off",
  "no-dupe-args": "off",
  "no-dupe-class-members": "off",
  "no-dupe-keys": "off",
  "no-func-assign": "off",
  "no-implied-eval": "off",
  "no-import-assign": "off",
  "no-new-native-nonconstructor": "off",
  "no-new-symbol": "off",
  "no-obj-calls": "off",
  "no-redeclare": "off",
  "no-restricted-syntax": [
    "error",
    {
      "selector": "PropertyDefinition[accessibility='private'], MethodDefinition[accessibility='private'], TSParameterProperty[accessibility='private']",
      "message": "Use a hash name instead."
    }
  ],
  "no-setter-return": "off",
  "no-shadow": "off",
  "no-this-before-super": "off",
  "no-throw-literal": "off",
  "no-undef": "off",
  "no-unreachable": "off",
  "no-unsafe-negation": "off",
  "no-unused-expressions": "off",
  "no-unused-vars": "off",
  "no-use-before-define": "off",
  "no-useless-constructor": "off",
  "no-var": "error",
  "prefer-const": "error",
  "prefer-promise-reject-errors": "off",
  "prefer-rest-params": "error",
  "prefer-spread": "error",
  "require-await": "off"
}
